---
import Gsap from "@components/Gsap.astro";
import Header from "@components/Header.astro";
import { Preloader } from "@components/Preloader";
import { Meta } from "@components/Meta";

import { LogASheep } from "@components/LogASheep";
import { GtagManager } from "@components/GtagManager";
import { Menu, Burger, Footer } from "@components/index";
import "@styles/fonts.scss";
import "@styles/reset.css";
import "@styles/utilities.scss";
import "@styles/variables.scss";
import "@styles/global.scss";
import "@styles/functions.scss";

export interface Props {
  title: string;
  background: string;
  isHome: boolean;
  urlsImages?: string[];
  urlsPages?: string[];
  description: string;
  imageSN?: string;
  Canvas?: (_props: Record<string, any>) => any;
}

const {
  title,
  background,
  urlsPages,
  urlsImages,
  Canvas,
  description,
  imageSN,
} = Astro.props;
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width" />
<link rel="icon" type="image/x-icon" href="/favicon.png" />
<meta name="generator" content={Astro.generator} />
<Meta title={title} description={description} imageSN={imageSN} />
<GtagManager />
{
  urlsImages &&
    urlsImages.map((urlImage) => (
      <link rel="preload" as="image" href={urlImage} />
    ))
}
{
  urlsPages &&
    urlsPages.map((urlPage) => <link rel="prefetch" href={urlPage} />)
}
<body style={{ background }} class="canva-black"
  ><LogASheep />
  <Burger />
  <Header />
  <LogASheep />
  <!-- @ts-ignore Cant properly type component as Props -->
  <Canvas />
  <Preloader />
  <Gsap>
    <div id="main-content" style={{ opacity: 0 }}>
      <slot name="main-content" />
    </div>
    <Footer />
  </Gsap>
  <div id="portal"></div>
  <Menu />

  <style lang="scss" is:global>
    body {
      transition: all 0.3s linear;
    }
    :global(:root) {
      font-size: calc(100vw / 1920 * 10);
    }
  </style>
</body>
