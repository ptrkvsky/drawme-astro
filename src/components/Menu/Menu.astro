<script>
  import { splitText } from '@helpers/gsap';
  import {
    getBurgerAnimation,
    getMenuAnimation,
    handleClickBurger,
  } from './Menu.animations';
  import { startMenu } from './Menu.functions';

  const splitLink = splitText('.link', 'lines');
  const tlMenu = getMenuAnimation(splitLink);
  const tlBurger = getBurgerAnimation();

  // preload the images set as data attrs in the menu items
  startMenu();

  document
    .getElementById('burger-button')
    .addEventListener('click', () => handleClickBurger(tlMenu, tlBurger));

  document.querySelectorAll('.link').forEach((element) => {
    element.addEventListener('click', (event) => {
      event.preventDefault();
      tlBurger.reverse();
      tlMenu.reverse();
      setTimeout(() => {
        const href = element.getAttribute('href');
        window.location.href = href;
      }, 1500);
    });
  });
</script>

<div id="wrapper-menu" class="wrapper-menu">
  <div class="content" data-desktop="">
    <nav>
      <ul class="menu">
        <li>
          <span class="line"></span>
          <a
            class="link menu__item"
            data-img="/assets/images/menu-home.png"
            href="/">Home</a
          >
        </li>
        <li>
          <span class="line"></span>
          <a
            class="link menu__item"
            data-img="/assets/images/menu-who-am-i.png"
            href="/who-am-i">Who am i</a
          >
        </li>
        <li>
          <span class="line"></span>
          <a
            class="link menu__item"
            data-img="/assets/images/menu-who-am-i.png"
            href="/projects">Projects</a
          >
        </li>
        <li>
          <span class="line"></span>
          <a
            class="link menu__item"
            data-img="/assets/images/menu-contact.png"
            href="/contact">Contact</a
          >
          <span class="line"></span>
        </li>
      </ul>
    </nav>
  </div>
  <!-- <svg class="cursor" width="80" height="80" viewBox="0 0 80 80">
    <circle class="cursor__inner" fill="#FFF" cx="40" cy="40" r="20"></circle>
  </svg> -->
</div>

<style lang="scss" is:global>
  .wrapper-menu {
    display: block;
    position: fixed;
    z-index: 525;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;

    .content {
      opacity: 0;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      overflow: hidden;
      will-change: opacity;
      mix-blend-mode: difference;
      background-color: var(--color-black-beauty);

      .menu {
        position: absolute;
        left: 50%;
        top: 45%;
        width: 100%;
        transform: translateX(-50%) translateY(-50%);
        font-family: WagonBold;
        line-height: 1;
        color: #fff;
        text-align: center;

        a {
          display: flex;
          text-align: center;
          justify-content: center;
          mix-blend-mode: difference;
          padding: clamp(24px, 2.4rem, 2.4rem) 0;

          color: white;
          font-size: clamp(60px, 6rem, 6rem);
        }

        .line {
          display: block;
          margin-left: auto;
          margin-right: auto;
          max-width: 50vw;
          height: 2px;
          background-color: rgb(89, 89, 89);
          transform-origin: 50% 50%;

          @media screen and (max-width: 768px) {
            display: none;
          }
        }
      }
    }
    &.is-open {
      pointer-events: initial;
      .content {
        pointer-events: initial;
      }
    }
  }
  .hover-reveal__img {
    background-size: cover;
    background-position: 50% 50%;
  }
  .hover-reveal__inner,
  .hover-reveal__img {
    width: 100%;
    height: 100%;
    position: relative;
  }

  .menu__item {
    flex: none;
    display: flex;
    // justify-content: flex-end;
    position: relative;
    // padding-left: 5rem;
  }

  .menu__item:hover::before {
    opacity: 1;
    transform: translateX(0);
  }

  .menu__item-text {
    position: relative;
    cursor: pointer;
    padding: 0.5rem;
    display: block;
    overflow: hidden;
    font-size: 6vw;
  }

  .menu__item-textinner {
    display: block;
    font-family: goldenbook, serif;
    font-weight: 300;
    text-transform: uppercase;
    white-space: nowrap;
    color: var(--color-menu);
  }

  .js .menu__item-textinner {
    transform: translateY(100%);
  }

  .menu__item:hover .menu__item-textinner {
    color: var(--color-menu-hover);
  }

  .menu__item-sub {
    display: none;
    text-transform: uppercase;
    font-weight: bold;
    white-space: nowrap;
    align-items: center;
    position: relative;
    margin-left: 2rem;
    padding-left: 3rem;
    opacity: 0;
    transform: translateX(-1rem);
    transition: transform 0.3s, opacity 0.3s;
  }

  .menu__item:hover .menu__item-sub {
    opacity: 1;
    transform: translateX(0);
  }

  .menu__item-sub::before {
    content: '';
    position: absolute;
    left: 0;
    top: 15%;
    width: 1px;
    height: 70%;
    background: currentColor;
    transform-origin: 0 100%;
    transform: rotate(22.5deg) scale3d(1, 0, 1);
    transition: transform 0.3s;
  }

  .menu__item:hover .menu__item-sub::before {
    transform: rotate(22.5deg) scale3d(1, 1, 1);
  }

  .hover-reveal {
    position: absolute;
    z-index: 220;
    width: 300px;
    height: 456px;
    top: 0;
    left: 0;
    pointer-events: none;
    opacity: 0;
    mix-blend-mode: difference;
  }

  .hover-reveal__inner {
    overflow: hidden;
  }

  .hover-reveal__inner,
  .hover-reveal__img {
    width: 100%;
    height: 100%;
    position: relative;
  }

  .hover-reveal__img {
    background-size: cover;
    background-position: 50% 50%;
  }

  .cursor {
    display: none;
  }

  .credits {
    align-self: flex-start;
    padding: 5rem 0 0 0;
  }

  .credits a {
    text-decoration: underline;
  }

  @media screen and (min-width: 53em) {
    .frame {
      flex-direction: column;
      align-items: flex-end;
      text-align: right;
      background: none;
      height: 50vh;
      pointer-events: none;
      padding-bottom: 0;
    }
    .frame__links a:not(:last-child) {
      margin-right: 0;
    }
    .frame__links {
      margin: 0.5rem 0 2rem;
      justify-self: start;
    }
    .frame__links a {
      margin-left: 0.5rem;
      pointer-events: auto;
    }
    .frame__button {
      cursor: not-allowed;
      pointer-events: auto;
      margin-top: auto;
      transform: translateY(50%);
    }
    .menu {
      padding-top: 20vh;
    }
    .menu__item {
      // padding-left: 25vw;
      justify-content: initial;
    }
    .menu__item-text {
      padding: 1vh 0;
      font-size: 4vw;
    }
    .menu__item-sub {
      display: flex;
    }
  }

  @media (any-pointer: fine) {
    .cursor {
      position: fixed;
      top: 0;
      left: 0;
      display: block;
      pointer-events: none;
    }
    .cursor__inner {
      fill: var(--cursor-fill);
      stroke: var(--cursor-stroke);
      stroke-width: var(--cursor-stroke-width);
      opacity: 0.3;
    }
    .credits {
      padding-left: 25vw;
    }
  }

  /*! locomotive-scroll v3.5.4 | MIT License | https://github.com/locomotivemtl/locomotive-scroll */
  html.has-scroll-smooth {
    overflow: hidden;
  }

  html.has-scroll-dragging {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .has-scroll-smooth body {
    overflow: hidden;
  }

  .has-scroll-smooth [data-scroll-container] {
    min-height: 100vh;
  }

  .c-scrollbar {
    position: absolute;
    right: 0;
    top: 0;
    width: 11px;
    height: 100vh;
    transform-origin: center right;
    transition: transform 0.3s, opacity 0.3s;
    opacity: 0;
  }
  .c-scrollbar:hover {
    transform: scaleX(1.45);
  }
  .c-scrollbar:hover,
  .has-scroll-scrolling .c-scrollbar,
  .has-scroll-dragging .c-scrollbar {
    opacity: 1;
  }

  .c-scrollbar_thumb {
    position: absolute;
    top: 0;
    right: 0;
    background-color: black;
    opacity: 0.5;
    width: 7px;
    border-radius: 10px;
    margin: 2px;
    cursor: -webkit-grab;
    cursor: grab;
  }
  .has-scroll-dragging .c-scrollbar_thumb {
    cursor: -webkit-grabbing;
    cursor: grabbing;
  }
</style>
