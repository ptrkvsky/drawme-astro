---
import { Quote } from "../../interfaces";

interface AstroProps {
  quote: Quote[];
  projectColor: string;
}

const { quote: quotes, projectColor } = Astro.props as AstroProps;
---

<script>
  import { animateQuotes } from "./SectionQuotes.animation";

  animateQuotes();
</script>

<section class="section-quotes">
  <div class="conteneur">
    {
      quotes?.map((quote, index) => {
        const {
          url,
          altText,
          metadata: {
            dimensions: { height, width },
          },
        } = quote.image.asset;

        const quoteWithBreakLines = quote.text.replace(/\n/g, "<br>");

        return (
          <div id={`wrapper-quote-${index}`} class="quote">
            <div class="mobile-flex">
              <div class="wrapper-image">
                {
                  <div class="o-hidden">
                    <img
                      src={url}
                      alt={altText}
                      width={width}
                      height={height}
                      class="illustration"
                    />
                  </div>
                  // <img src={url} alt={altText} />
                }
              </div>
            </div>
            <div class="text col">
              <div class="o-hidden">
                <span style={`color: ${projectColor}`} class="mark">
                  â€Ÿ
                </span>
              </div>
              <p
                class="split-text"
                id={`quote-${index}`}
                set:html={quoteWithBreakLines}
              />
            </div>
          </div>
        );
      })
    }
  </div>
</section>

<style lang="scss">
  .section-quotes {
    margin-top: clamp(24px, 18.3rem, 18.3rem);
  }

  .conteneur {
    max-width: 163rem;
    margin-right: auto;
    margin-left: auto;
  }

  .quote {
    display: block;
    position: relative;
    display: flex;
    gap: 154px;
    padding-bottom: clamp(24px, 26.4rem, 26.4rem);

    @media screen and (max-width: 1024px) {
      flex-direction: column;
      gap: 0;
      margin-bottom: 0;

      &:nth-child(even) .wrapper-image {
        margin-top: 24px;
      }
    }

    &:nth-child(even) {
      .mobile-flex {
        @media screen and (max-width: 1024px) {
          display: flex;
          justify-content: flex-end;
          order: -1;
        }
      }

      .text {
        order: -1;
        max-width: 76rem;
        @media screen and (max-width: 1024px) {
          max-width: 100%;
        }
      }
      .wrapper-image {
        position: absolute;
        bottom: 6.4rem;
        right: 0;

        @media screen and (max-width: 1024px) {
          position: relative;
          bottom: initial;
        }
      }
    }

    .wrapper-image {
      max-width: clamp(267px, 53.7rem, 53.7rem);
    }

    .text {
      position: relative;
      margin-top: clamp(24px, 13.2rem, 13.2rem);

      font-size: clamp(28px, 5.5rem, 5.5rem);
      font-family: WagonBold;
      line-height: 1.1;
      .mark {
        position: absolute;
        font-size: 338px;
        top: -178px;
        left: -20px;

        @media screen and (max-width: 1024px) {
          position: relative;
          display: block;
          height: 44px;
          font-size: 100px;
          top: 0px;
          left: 0px;
          font-family: var(--text-heading);
        }
      }
    }
  }
</style>
