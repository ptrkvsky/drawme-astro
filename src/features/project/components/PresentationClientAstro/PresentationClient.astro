---
import { portableTextComponents } from "@helpers/portableTextComponents";
import { toHTML } from "@portabletext/to-html";

interface AstroProps {
  projectColor: string;
  text: any[];
  textColor: string | null;
}
const { projectColor, text, textColor } = Astro.props as AstroProps;

const textPresentation = toHTML(text, {
  components: portableTextComponents,
});

const finalTextColor = textColor || "#000";
---

<script defer define:vars={{ textPresentation, projectColor }}>
  // Adjust backkound color and  height of the wrapper
  document.addEventListener("DOMContentLoaded", () => {
    const wrapper = document.getElementById("presentation-client");
    const background = document.getElementById("bg-presentation");

    if (!wrapper || !background) {
      return; // Exit early if the elements are not found
    }

    background.style.backgroundColor = projectColor;
    wrapper.style.backgroundColor = projectColor;

    let resizeTimeout;

    const setHeight = () => {
      const height = wrapper.clientHeight;
      background.style.height = `${height}px`;
    };

    const debouncedSetHeight = () => {
      clearTimeout(resizeTimeout);
      resizeTimeout = setTimeout(setHeight, 100); // Adjust the debounce delay as needed
    };

    setHeight();
    window.addEventListener("resize", debouncedSetHeight);
  });
</script>
<script>
  import { revealWrapper } from "./PresentationClient.animation";

  revealWrapper();
</script>

<div
  id="presentation-client"
  class="presentation-client"
  style={{ color: finalTextColor }}
  set:html={textPresentation}
  data-speed="1.03"
  data-lag="0.02"
>
  <div id="bg-presentation" class="background"></div>
</div>

<style lang="scss" is:global>
  .presentation-client {
    padding: 3rem 6rem 0rem 6rem;
    font-size: clamp(15px, 2.1rem, 2.1rem);
    letter-spacing: 1.1px;
    line-height: 1.2;
    border-bottom-left-radius: clamp(90px, 9rem, 9rem);

    @media screen and (max-width: 1024px) {
      box-sizing: border-box;
      padding: 32px 24px 56px;
      max-width: calc(100% - 24px);
      margin-left: auto;
    }

    p {
      margin-bottom: clamp(24px, 3.2rem, 3.2rem);
      line-height: 1.3;
    }

    h2 {
      font-size: clamp(16px, 2.2rem, 2.2rem);
      font-family: "MontrealBold";
      font-weight: bold;
      margin-bottom: clamp(4px, 0.4rem, 0.4rem);
    }

    .background {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      width: 20%;
      z-index: -1;

      @media screen and (max-width: 1024px) {
        display: none;
      }
    }
  }
</style>
