---
interface Props {
  link: string;
  color?: string;
}

const { link, color } = Astro.props;

const svgColor = color ?? "#71F4DF";
---

<script define:vars={{ svgColor }}>
  function setColorOnHover() {
    const letsGoELements = document.querySelectorAll(".lets-go");

    if (!letsGoELements.length) return;

    letsGoELements.forEach((letsGo) => {
      // Define the original color and the hover color here
      const originalColor = letsGo.style.color;

      letsGo.addEventListener("mouseenter", () => {
        letsGo.querySelector(".text").style.color = svgColor;
      });

      letsGo.addEventListener("mouseleave", () => {
        letsGo.querySelector(".text").style.color = originalColor;
      });
    });
  }

  document.addEventListener("DOMContentLoaded", () => {
    setColorOnHover();
  });
</script>

<a href={link} class="lets-go">
  <span class="text reveal lets-go__text">Let's go !</span>
  <svg
    id="svg-cercle"
    class="circle"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 159 58"
  >
    <path
      id="svg-cercle-line-1"
      fill="none"
      stroke={svgColor}
      stroke-width="2px"
      d="M31.53,12.11c-7.76,2.2-17,5.02-23.04,10.63c-3.01,2.8-5.11,6.92-4.43,10.97c1.6,9.55,12.69,13.15,20.86,14.90c14.4,3.09,29.61,3.92,44.30,4.63c12.95,0.63,25.96,0.49,38.85-0.96c11.61-1.31,26.02-2.83,36.19-9.04c6.80-4.15,13.23-12.15,5.47-18.59C129,7.47,99.16,7.34,73.52,8.08C60.22,8.46,38,11.32,26.19,18.02"
    ></path>
  </svg>
</a>

<style lang="scss">
  .lets-go {
    position: absolute;
    top: 50%;
    left: 50%;
    padding: clamp(29.7px, 9.2rem, 9.2rem);
    display: flex;
    align-items: center;
    justify-content: center;
    transform: translate(-50%, calc(-50% - 5px));
    letter-spacing: 0.44rem;
    text-align: center;
    text-transform: uppercase;
    color: var(--color-white-beauty);
    font-family: var(--text-body-bold);
    font-size: clamp(20px, 3rem, 3rem);

    &:hover {
      .text {
        color: var(--color-ice-ice-baby);
      }
    }

    .text {
      display: inline-block;
      line-height: 1;
      position: relative;
      vertical-align: middle;
      color: #fff;
      transition: color 0.3s linear;
    }

    .circle {
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      width: 100%;
    }
  }
  .lets-go__text {
    display: block;
    min-width: 200px;
  }
</style>
