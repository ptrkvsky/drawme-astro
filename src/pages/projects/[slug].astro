---
import BackgroundDev from '@features/project/components/BackgroundDev.astro';

import SectionImagesDecale from '@features/project/components/SectionImagesDecale.astro';
import SectionImagesFooter from '@features/project/components/SectionImagesFooter.astro';
import SectionNextProject from '@features/project/components/SectionNextProject.astro';
import SectionProjectOverview from '@features/project/components/SectionProjectOverview.astro';
import SectionQuotes from '@features/project/components/SectionQuotes.astro';
import SectionSingleImage from '@features/project/components/SectionSingleImage.astro';
import getProjectUrlParams from '@features/project/functions/getProjectUrlParams';
import { SanityProject, SanityProjects } from '@features/project/interfaces/';
import { querySanityProjects } from '@features/project/queries/querySanityProjects';
import fetchSanity from '@helpers/fetchSanity';
import Layout from '@layouts/Layout.astro';
import config from 'src/config';

export async function getStaticPaths() {
  const sanityProjects = await fetchSanity<SanityProjects>(querySanityProjects);
  const params = sanityProjects && getProjectUrlParams(sanityProjects);
  console.log(params);
  return params;
}

interface AstroProps {
  project: SanityProject;
  nextProject: SanityProject;
}

const { project, nextProject } = Astro.props as AstroProps;

console.log('-->', nextProject);
const { hue, saturation } = project;
---

<script define:vars={{ hue, saturation, config }}>
  const root = document.querySelector(':root');
  //@ts-ignore
  root.style.setProperty('--canva-hue', hue);
  root.style.setProperty('--canva-saturation', saturation);
</script>

<Layout isHome={false} background="#FFF" title="Un beau projet">
  <div slot="main-content">
    <div class="wrapper-project">
      <SectionProjectOverview project={project} />
      <SectionQuotes
        quote={project.quote}
        projectColor={project.mainColor.hex}
      />
      {
        project.imagesFooter && project.imagesFooter.length > 0 && (
          <SectionImagesFooter images={project.imagesFooter} />
        )
      }
      {
        project.imagesDecale && project.imagesDecale.length > 0 && (
          <SectionImagesDecale images={project.imagesDecale} />
        )
      }
      {
        project.imageWebsite && (
          <SectionSingleImage mainImage={project.imageWebsite} />
        )
      }
      <SectionNextProject nextProject={nextProject} />
    </div>
  </div>
</Layout>
{config.mode === 'development' ? <BackgroundDev /> : null}

<style lang="scss" is:global>
  .wrapper-project {
    padding-top: clamp(95px, 9.5rem, 9.5rem);
  }
</style>
