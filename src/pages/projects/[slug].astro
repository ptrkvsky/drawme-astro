---
import Canvas from "@features/project/components/Canvas.astro";
import { SectionImagesDecale } from "@features/project/components/SectionImagesDecale";
import { SectionImagesFooter } from "@features/project/components/SectionImagesFooter";
import SectionNextProject from "@features/project/components/SectionNextProject.astro";
import { SectionProjectOverview } from "@features/project/components/SectionProjectOverview";
import { SectionQuotes } from "@features/project/components/SectionQuotes";
import SectionSingleImage from "@features/project/components/SectionSingleImage.astro";
import getProjectUrlParams from "@features/project/functions/getProjectUrlParams";
import { SanityProject, SanityProjects } from "@features/project/interfaces/";
import { querySanityProjects } from "@features/project/queries/querySanityProjects";
import fetchSanity from "@helpers/fetchSanity";
import Layout from "@layouts/Layout.astro";
import config from "src/config";

export async function getStaticPaths() {
  const sanityProjects = await fetchSanity<SanityProjects>(querySanityProjects);
  const params = sanityProjects && getProjectUrlParams(sanityProjects);

  return params;
}

interface AstroProps {
  project: SanityProject;
  nextProject: SanityProject;
}

const { project, nextProject } = Astro.props as AstroProps;
const { hue, saturation } = project;

const title = `${project.title} | Draw me a Sheep`;

// prefect images quotes
const urlsImages = [
  ...(project?.quote?.map((quote) => quote.image.asset.url) || []),
  project?.imageWebsite?.asset?.url,
  ...(project?.imagesFooter?.map((imageFooter) => imageFooter.asset.url) || []),
].filter(Boolean);

const nextProjectUrls = [`/projects/${nextProject.slug.current}`];
---

<script define:vars={{ hue, saturation, config }}>
  const root = document.querySelector(":root");
  root.style.setProperty("--canva-hue", hue);
  root.style.setProperty("--canva-saturation", saturation);
</script>

<Layout
  isHome={false}
  background="#FFF"
  title={title}
  urlsImages={urlsImages}
  urlsPages={nextProjectUrls}
  Canvas={Canvas}
>
  <div slot="main-content">
    <div class="wrapper-project">
      <SectionProjectOverview project={project} />
      <SectionQuotes
        quote={project.quote}
        projectColor={project.mainColor.hex}
      />
      {
        project.imagesFooter && project.imagesFooter.length > 0 && (
          <SectionImagesFooter images={project.imagesFooter} />
        )
      }
      {
        project.imagesDecale && project.imagesDecale.length > 0 && (
          <SectionImagesDecale images={project.imagesDecale} />
        )
      }
      {
        project.imageWebsite && (
          <SectionSingleImage mainImage={project.imageWebsite} />
        )
      }
      <SectionNextProject nextProject={nextProject} />
    </div>
  </div>
</Layout>

<style lang="scss" is:global>
  .wrapper-project {
    padding-top: clamp(95px, 9.5rem, 9.5rem);
  }
</style>
